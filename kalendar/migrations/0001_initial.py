# Generated by Django 3.2.5 on 2021-07-30 18:55

import django.db.models.deletion
from django.db import migrations, models


def migrate_locations(apps, _):
    Task = apps.get_model("tutors", "task")
    Event = apps.get_model("tutors", "event")
    Location = apps.get_model("kalendar", "Location")

    # get all tuples of (id,en,de)
    locations = set()
    for task in Task.objects.all():
        l_tuple = (task.meeting_point or "", task.meeting_point_en or "", task.meeting_point_de or "")
        locations.add(l_tuple)
    for event in Event.objects.all():
        l_tuple = (event.meeting_point or "", event.meeting_point_en or "", event.meeting_point_de or "")
        locations.add(l_tuple)

    # convert tuples to Locations
    l_map = {}
    for shortname, shortname_en, shortname_de in locations:
        location = Location.objects.create(
            shortname=shortname,
            shortname_en=shortname_en,
            shortname_de=shortname_de,
        )
        l_map[(shortname, shortname_en, shortname_de)] = location


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tutors", "0006_auto_20210216_0111"),
    ]

    operations = [
        migrations.CreateModel(
            name="Date",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateTimeField(verbose_name="Date and Time")),
                ("probable_length", models.IntegerField(default=60, verbose_name="probable length in minutes")),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("shortname", models.CharField(max_length=100, verbose_name="short/simplified Address")),
                ("shortname_de", models.CharField(max_length=100, null=True, verbose_name="short/simplified Address")),
                ("shortname_en", models.CharField(max_length=100, null=True, verbose_name="short/simplified Address")),
                ("address", models.CharField(blank=True, max_length=100, verbose_name="(Street)map-address")),
                (
                    "address_de",
                    models.CharField(blank=True, max_length=100, null=True, verbose_name="(Street)map-address"),
                ),
                (
                    "address_en",
                    models.CharField(blank=True, max_length=100, null=True, verbose_name="(Street)map-address"),
                ),
                ("room", models.CharField(blank=True, max_length=50, verbose_name="Room")),
                ("comment", models.CharField(blank=True, max_length=200, verbose_name="Comment")),
            ],
        ),
        migrations.CreateModel(
            name="DateSubscriber",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="kalendar.date")),
                ("tutor", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="tutors.tutor")),
            ],
        ),
        migrations.CreateModel(
            name="DateGroup",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("comment", models.CharField(blank=True, max_length=200, verbose_name="Comment")),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="kalendar.location",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="date",
            name="group",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="kalendar.dategroup"),
        ),
        migrations.AddField(
            model_name="date",
            name="meeting_subscribers",
            field=models.ManyToManyField(
                blank=True,
                through="kalendar.DateSubscriber",
                to="tutors.Tutor",
                verbose_name="Subscribers to one meeting",
            ),
        ),
        migrations.RunPython(migrate_locations),
    ]
